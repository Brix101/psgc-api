// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/barangays": {
            "get": {
                "description": "get barangays",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "barangays"
                ],
                "summary": "Show list of Barangays",
                "parameters": [
                    {
                        "type": "string",
                        "example": "filter",
                        "description": "This is filter for all the field in the object GeographicArea",
                        "name": "filter",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1000,
                        "name": "perPage",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PaginatedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/barangays/{psgcCode}": {
            "get": {
                "description": "get string by PsgcCode",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "barangays"
                ],
                "summary": "Show a barangay",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Barangay psgcCode",
                        "name": "psgcCode",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GeographicArea"
                        }
                    },
                    "400": {
                        "description": "Item Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/cities": {
            "get": {
                "description": "get cities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cities"
                ],
                "summary": "Show list of cities",
                "parameters": [
                    {
                        "type": "string",
                        "example": "filter",
                        "description": "This is filter for all the field in the object GeographicArea",
                        "name": "filter",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1000,
                        "name": "perPage",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PaginatedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/cities/{psgcCode}": {
            "get": {
                "description": "get string by PsgcCode",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cities"
                ],
                "summary": "Show a city",
                "parameters": [
                    {
                        "type": "string",
                        "description": "City PsgcCode",
                        "name": "psgcCode",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GeographicArea"
                        }
                    },
                    "400": {
                        "description": "Item Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/masterlist": {
            "get": {
                "description": "get masterlist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "masterlist"
                ],
                "summary": "Show list of masterlist",
                "parameters": [
                    {
                        "type": "string",
                        "example": "filter",
                        "description": "This is filter for all the field in the object GeographicArea",
                        "name": "filter",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1000,
                        "name": "perPage",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PaginatedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/provinces": {
            "get": {
                "description": "get provinces",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "provinces"
                ],
                "summary": "Show list of provinces",
                "parameters": [
                    {
                        "type": "string",
                        "example": "filter",
                        "description": "This is filter for all the field in the object GeographicArea",
                        "name": "filter",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1000,
                        "name": "perPage",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PaginatedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/provinces/{psgcCode}": {
            "get": {
                "description": "get string by PsgcCode",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "provinces"
                ],
                "summary": "Show a province",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Province PsgcCode",
                        "name": "psgcCode",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GeographicArea"
                        }
                    },
                    "400": {
                        "description": "Item Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/regions": {
            "get": {
                "description": "get regions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "regions"
                ],
                "summary": "Show list of regions",
                "parameters": [
                    {
                        "type": "string",
                        "example": "filter",
                        "description": "This is filter for all the field in the object GeographicArea",
                        "name": "filter",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1000,
                        "name": "perPage",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PaginatedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/regions/{psgcCode}": {
            "get": {
                "description": "get string by PsgcCode",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "regions"
                ],
                "summary": "Show a region",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Region PsgcCode",
                        "name": "psgcCode",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GeographicArea"
                        }
                    },
                    "400": {
                        "description": "Item Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "GeographicArea": {
            "type": "object",
            "properties": {
                "cityCode": {
                    "type": "string",
                    "nullable": true,
                    "omitempty": true
                },
                "name": {
                    "type": "string"
                },
                "provinceCode": {
                    "type": "string",
                    "nullable": true,
                    "omitempty": true
                },
                "psgcCode": {
                    "type": "string"
                },
                "regionCode": {
                    "type": "string",
                    "nullable": true,
                    "omitempty": true
                }
            }
        },
        "MetaData": {
            "type": "object",
            "properties": {
                "itemCount": {
                    "type": "integer",
                    "example": 1000
                },
                "page": {
                    "type": "integer",
                    "example": 1
                },
                "perPage": {
                    "type": "integer",
                    "example": 1000
                },
                "totalItems": {
                    "type": "integer",
                    "example": 10000
                },
                "totalPages": {
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "PaginatedResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GeographicArea"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/MetaData"
                }
            }
        }
    },
    "externalDocs": {
        "description": "Data used in this API is sourced from PSGC main page",
        "url": "https://psa.gov.ph/classification/psgc"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Philippine Standard Geographic Code (PSGC) API",
	Description:      "This API is based on the Philippine Standard Geographic Code (PSGC), which is a systematic classification and coding of geographic areas in the Philippines. Its units of classification are based on the four well-established levels of geographical-political subdivisions of the country, including the region, the province, the municipality/city, and the barangay.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
